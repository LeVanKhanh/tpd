// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tpd.Quiz.Data;

namespace Tpd.Quiz.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20190728063719_tpd")]
    partial class tpd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tpd.Quiz.Data.Entities.Option", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Answer")
                        .HasMaxLength(1000);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid>("CreatedBy");

                    b.Property<Guid?>("ImageId");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<Guid>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Option");
                });

            modelBuilder.Entity("Tpd.Quiz.Data.Entities.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid>("CreatedBy");

                    b.Property<string>("Explanation")
                        .HasMaxLength(2000);

                    b.Property<Guid?>("ImageId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("TheQuestion")
                        .HasMaxLength(1000);

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<Guid>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("Tpd.Quiz.Data.Entities.QuestionCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid>("CreatedBy");

                    b.Property<string>("Desctiption")
                        .HasMaxLength(1000);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .HasMaxLength(200);

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<Guid>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("QuestionCategory");
                });

            modelBuilder.Entity("Tpd.Quiz.Data.Entities.QuestionOption", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid>("CreatedBy");

                    b.Property<string>("Explanation")
                        .HasMaxLength(2000);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsKey");

                    b.Property<Guid>("OptionId");

                    b.Property<Guid>("QuestionId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<Guid>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("OptionId");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionOption");
                });

            modelBuilder.Entity("Tpd.Quiz.Data.Entities.QuestionQuestionCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid>("CreatedBy");

                    b.Property<bool>("IsDeleted");

                    b.Property<Guid>("QuestionCategoryId");

                    b.Property<Guid>("QuestionId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<Guid>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("QuestionCategoryId");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionQuestionCategory");
                });

            modelBuilder.Entity("Tpd.Quiz.Data.Entities.QuestionStatistic", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid>("CreatedBy");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("TotalAnswer");

                    b.Property<int>("TotalCorrect");

                    b.Property<int>("TotalLoad");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<Guid>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("QuestionStatistic");
                });

            modelBuilder.Entity("Tpd.Quiz.Data.Entities.QuestionOption", b =>
                {
                    b.HasOne("Tpd.Quiz.Data.Entities.Option", "Option")
                        .WithMany()
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Tpd.Quiz.Data.Entities.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Tpd.Quiz.Data.Entities.QuestionQuestionCategory", b =>
                {
                    b.HasOne("Tpd.Quiz.Data.Entities.QuestionCategory", "QuestionCategory")
                        .WithMany()
                        .HasForeignKey("QuestionCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Tpd.Quiz.Data.Entities.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Tpd.Quiz.Data.Entities.QuestionStatistic", b =>
                {
                    b.HasOne("Tpd.Quiz.Data.Entities.Question", "Question")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
